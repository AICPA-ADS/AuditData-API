#------LICENSE--------
#MIT License
#
#Copyright (c) 2020 AICPA

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


#--------OUTSTANDING ITEMS  -----------

# PAGINATION
# Define pagination scheme if this implemented by an API provider. Don't want implementers to use different 
# schemes thus making the API incompatible.

# Security
# Need to document approach to security and authentication.

# GL Adjustments
# Should the standard cover adjustments proposed by the auditors.


openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/XBRL-US/Audit_Data_Open-API/1.0.0
info:
  version: "1.0.0"
  title: Audit Data Open Api Project (AICPA)
  description: This is an initial API specification for requesting data for performing audits

tags:
  - name: General Ledger Module
    description: Used to request General Ledger Information
  - name: Base Module
    description: Used across modules.

security:
  - implicit:
      - read
      - write
paths:
  /gl_journals:
    get:
      operationId: getGLDetails
      tags: [General Ledger Module]
      security:
        - bearerAuth: []
      description: >
       Allows searching for General Ledger Journal Transactions
      parameters:
        - name: start_date
          in: query
          description: Start date for GL transactions.  Returns all transactions with an `effective_date` after `the start_date`.
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: End date for GL transactions.  Returns all transactions with an `effective_date` before `the end_date`.
          required: false
          schema:
            type: string
            format: date

        - $ref: '#/components/parameters/entity_id_Param'
           
        
      responses:
        '200':
          description: __gl_details__ successfully accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GL_Journals'

        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'


  /gl_trial_balance:
    get:
      operationId: getTBDetails
      tags: [General Ledger Module]
      security:
        - bearerAuth: []
      description: >
        Allows searching for General Ledger Trial Balance Totals
      parameters:
        - name: start_date_trial_balance
          in: query
          description: Start date (No time) for Trial Balance.  Returns balances at the start of the year after opening adjustments to retained earnings and adjustments for changes in accounting standards.
          required: false
          schema:
            type: string
            format: date
        - name: end_date_trial_balance
          in: query
          description: End date for the trial balance.  Returns all the values at the provided `end_date`.
          required: true
          schema:
            type: string
            format: date
        
        - name: budget_flag
          in: query
          description: Flag to indicate if budget data should be returned. If not provided the default is actual data. To get budget data only a parameter of "budget" is used. To get both a parameter of "both" is passed.
          required: false
          schema:
            type: string
            enum: [budget, both]

        - $ref: '#/components/parameters/entity_id_Param'
            
        
      responses:
        '200':
          description: _gl_trial_balance_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/GL_Account_Balances'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'


  /periods:
    get:
      operationId: getPeriods
      tags: [Base Module]
      security:
        - bearerAuth: []
      description: >
        Allows requesting the reporting periods of the company. If no parameters are passed all the available entities available to the user in the system are returned.  The end point also allows the user to pass an entity identifier to return the name of the entity.
      parameters:
        - name: start_date
          in: query
          description: Returns all reporting periods with an end date equal or greater than the end date.
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: Returns all reporting periods with an end date equal or less than the end date.
          required: false
          schema:
            type: string
            format: date

        - $ref: '#/components/parameters/entity_id_Param'
        
      responses:
        '200':
          description: _periods_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/Periods'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'

  /entities:
    get:
      operationId: getEntities
      tags: [Base Module]
      security:
        - bearerAuth: []
      description: >
        Allows requesting the reporting entities available from the API.
      parameters:
        - $ref: '#/components/parameters/entity_id_Param'
      responses:
        '200':
          description: _entities_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/Entities'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'

  /gl_accounts:
    get:
      operationId: getChartAccounts
      tags: [General Ledger Module]
      security:
        - bearerAuth: []
      description: >
        Allows requesting a listing of chart of accounts 
      parameters:
        - name: entity_id
          in: query
          description: Entity Identifier.  UID of the entity. Can be defined by the implementer of the API does not imply that a standard identifier is used. If no entity id identifier is provided and the requested system has multiple entities the API implementer determines entity to return. 
          required: false
          schema:
            type: string   
        
      responses:
        '200':
          description: _gl_chart_of_accounts_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/GL_Chart_of_Accounts'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'

  /gl_trial_balance_xbrl:
    get:
      operationId: getTB-XBRLDetails
      tags: [General Ledger Module]
      security:
        - bearerAuth: []
      description: >
        Allows searching for General Ledger Trial Balance Totals
      parameters:
  
        - name: end_date
          in: query
          description: End date for the trial balance.  Returns all the values at the provided `end_date`.
          required: false
          schema:
            type: string
            format: date
            
        - $ref: '#/components/parameters/GL_Account_Number_Param'

        - $ref: '#/components/parameters/entity_id_Param'
            
      responses:
        '200':
          description: _gl_trial_balance_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: "#/components/schemas/xbrl_tb_response"
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          $ref: '#/components/responses/bad_token'
        '405':
          $ref: '#/components/responses/method_not_allowed'
        '500':
          $ref: '#/components/responses/internal_server_error'
  
  /AR_Open_Accounts_Receivables:
    get:
      operationId: getAROpenAccountsReceivables
      tags: [Accounts Receivable]
      security:
        - bearerAuth: []
      description: >
        Each row in this table represents the balance expected from the customer for one uniquely identifiable transaction. This data should be at the summary level (by invoice), not at the detailed level (by invoice line item). The sum total of the transaction amounts as of the specified date shall reconcile to the total AR amount in the General Ledger (GL) as of the same date.
      parameters:
        - name: AR_Open_Accounts_Receivables_id
          in: query
          description: Identifier for the transaction of an open AR includes invoice and cash received. 
          required: false
          schema:
            type: string
      
      responses:
        '200':
          description: _AR_Open_Accounts_Receivables_ successfully accepted
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/AR_Open_Accounts_Receivables_Items'


components:
  securitySchemes:
    implicit:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/oauth/auth'
          scopes:
            write: allows modifying resources
            read: allows reading resources

  parameters:
    GL_Account_Number_Param:
      in: query
      name: gl_account_number
      schema:
        type: string
        maxLength: 100
      description: The GL account number. Shall match the GL_Account_Number used in the Chart of Accounts.

    entity_id_Param:
      in: query
      name: entity_id
      description: Entity Identifier.  UID of the entity. Can be defined by the implementer of the API does not imply that a standard identifier is used. If no entity id identifier is provided and the requested system has multiple entities the API implementer determines entity to return. 
      required: false
      schema:
        type: string


  schemas:
    error_result:
      type: object
      properties:
        code:
          type: string
          description: Implementation-defined Identifier/Code for the error being returned by the server
        error_description:
          type: string
          description: Provides additional human-readable description of the error. Implementation should include diagnostic detail to help the calling client to take corrective actiont to eliminate the error, if possible.
    GL_Journals:
      type: array
      items:
         $ref: '#/components/schemas/GL_Details'
    GL_Details: 
      type: object
      properties:
        #In AICPA and ISO
        Journal_ID:
          $ref: '#/components/schemas/Journal_ID'
        #ISO ONLY
        #Journal_Number:
        # $ref: '#/components/schemas/Journal_Number'
        #In AICPA and ISO
        Fiscal_Year:
          $ref: '#/components/schemas/Fiscal_Year'
        #In AICPA and called Accounting_Period in ISO
        Period:
          $ref: '#/components/schemas/Period'
        #In AICPA and ISO
        Effective_Date:
          $ref: '#/components/schemas/Effective_Date'
        #ISO ONLY
        #JE_Type_Code:
        # $ref: '#/components/schemas/JE_Type_Code'
        #In AICPA and ISO
        JE_Header_Description:
          $ref: '#/components/schemas/JE_Header_Description'
        #In AICPA and ISO
        Source:
          $ref: '#/components/schemas/Source'
        #In AICPA and ISO
        Business_Unit_Code:
          $ref: '#/components/schemas/Business_Unit_Code'
        #In AICPA and ISO
        Reversal_Indicator:
          $ref: '#/components/schemas/Reversal_Indicator'
        #In AICPA and ISO
        Reversal_Journal_ID:
          $ref: '#/components/schemas/Reversal_Journal_ID'
        #ISO ONLY 
        Cancellation_Sign:
          $ref: '#/components/schemas/Cancellation_Sign'
        # May be this should be changed to Created By not all journals are created by a human which entered implies.
        # The ISO standard changed it to Created_User_Id. 
        Entered_By:
          $ref: '#/components/schemas/Entered_By'
        #In AICPA and called Created_Date in ISO
        Entered_Date:
          $ref: '#/components/schemas/Created_Date'
        #In AICPA and called Created_Time in ISO
        Entered_Time:
          $ref: '#/components/schemas/Created_Time'
        #AICPA ONLY
        Last_Modified_By:
          $ref: '#/components/schemas/Last_Modified_By'
        #AICPA ONLY
        Last_Modified_Date:
          $ref: '#/components/schemas/Last_Modified_Date'
        #In AICPA and called Approved_Person_ID in ISO
        Approved_By:
          $ref: '#/components/schemas/Approved_Person_ID'
        #In AICPA and ISO
        Approved_Date:
          $ref: '#/components/schemas/Approved_Date'
        #Added for API Specification for cases where have multiple entities.
        Entity_Identifier:
          $ref: '#/components/schemas/Entity_Identifier'
        GL_Line_Items:
          type: array
          items:
            $ref: '#/components/schemas/GL_Line_Item'
      required:
        - Journal_ID
        - Effective_Date
        - GL_Line_Items

      
    GL_Line_Item:
      type: object
      properties:
        #In AICPA and ISO
        GL_Account_Number:
          $ref: '#/components/schemas/GL_Account_Number'
        #In AICPA and ISO
        Journal_ID_Line_Number:
          $ref: '#/components/schemas/Journal_ID_Line_Number'
        #In AICPA and ISO
        JE_Line_Description:
          $ref: '#/components/schemas/JE_Line_Description'
        #Amount in AICPA Functional_Amount in ISO
        Amount:
          $ref: '#/components/schemas/Functional_Amount'
        #Amount_Currency in AICPA Functional_Amount in ISO
        Amount_Currency:
          $ref: '#/components/schemas/Functional_Currency_Code'
        #In AICPA and ISO
        Reporting_Amount:
          $ref: '#/components/schemas/Reporting_Amount'
        #In AICPA and ISO as Reporting_Currency_Code
        Reporting_Amount_Currency:
          $ref: '#/components/schemas/Reporting_Currency_Code'
        #In AICPA and ISO
        Local_Amount:
          $ref: '#/components/schemas/Local_Amount' 
        #In AICPA and ISO as Local_Currency_Code
        Local_Amount_Currency:
          $ref: '#/components/schemas/Local_Currency_Code'
        #ISO ONLY
        Transaction_Amount:
          $ref: '#/components/schemas/Transaction_Amount'
        #ISO ONLY
        Transaction_Currency:
          $ref: '#/components/schemas/Transaction_Currency_Code'
        #Amount_Credit_Debit_Indicator in AICPA Credit_Debit_Indicator in ISO
        Amount_Credit_Debit_Indicator:
          $ref: '#/components/schemas/Credit_Debit_Indicator'
      required:
        - GL_Account_Number
        - Amount
        - Amount_Credit_Debit_Indicator
        - Amount_Currency

    xbrl_tb_response:
      type: object
      properties:
        documentInfo:
          $ref: '#/components/schemas/documentInfo_oim_json'
        facts:
            $ref: '#/components/schemas/facts_oim_json'
    
    documentInfo_oim_json:
      type: object
      properties:
        documentType:
          type: string
          example: http://www.xbrl.org/WGWD/YYYY-MM-DD/xbrl-json
        features:
          type: object
          properties:
            xbrl:canonicalValues: 
              type: boolean
        prefixes:
          type: object
          additionalProperties:
            type: string
          example:
            xbrl: "http://www.xbrl.org/WGWD/YYYY-MM-DD/oim"
            p1: "http://www.xbrl.org/2003/iso4217"
            p2: "http://aicpa.org/das/us-gaap/2020-01-31"
            p3: "http://www.xbrl.org/2003/instance"
      
            
        taxonomy:
          type: array
          items:
            type: string
            example: 
              "http://www.aicpa.org/das/us-gaap/2020-01-31.xsd"
    
    facts_oim_json:
      type: object
      properties:
        value:
          type: string
        accuracy:
          type: integer
        aspects:
          type: object
          properties:
            concept: 
              type: string
            entity:
              type: string
            period:
              type: string
            unit:
              type: string
            GL_Account_Number:
              $ref: '#/components/schemas/GL_Account_Number'
      example:
        xfd233befbacbc83e43d510ae01866384c65f23a60482caaa20331642: {"value": "151000",
      "accuracy": -3,
      "aspects": {
        "concept": "p2:ContractWithCustomers",
        "entity": "p3:0001512228",
        "period": "2015-07-01T00:00:00/2016-07-01T00:00:00",
        "unit": "p1:USD",
        "GL_Account_Number": "12345678"}
        }

    GL_Account_Balances:
      type: array
      items:
          $ref: '#/components/schemas/GL_Account_Balance'
    GL_Account_Balance: 
      type: object
      properties:
        GL_Account_Number:
          $ref: '#/components/schemas/GL_Account_Number'
        #Added for API Specification for cases where have multiple entities.
        Entity_Identifier:
          $ref: '#/components/schemas/Entity_Identifier'
        Business_Unit_code:
          $ref: '#/components/schemas/Business_Unit_Code'
        Balance_AsOf_Date:
          $ref: '#/components/schemas/Balance_As_Of_Date'
        Fiscal_Year:
          $ref: '#/components/schemas/Fiscal_Year'
        Period:
          $ref: '#/components/schemas/Period'
        #In AICPA and called Beginning_Functional_Amount in ISO
        Amount_Beginning:
          $ref: '#/components/schemas/Beginning_Functional_Amount'
        #In AICPA and called Beginning_Reporting_Amount in ISO
        Amount_Beginning_Reporting:
          $ref: '#/components/schemas/Beginning_Reporting_Amount'
        #In AICPA and called Beginning_Local_Amount in ISO
        Amount_Beginning_Local:
          $ref: '#/components/schemas/Beginning_Local_Amount'
        #In AICPA and called Functional_Currency_Code in ISO
        Amount_Currency:
          $ref: '#/components/schemas/Functional_Currency_Code'
        #In AICPA and called Reporting_Currency_Code in ISO
        Amount_Reporting_Currency:
          $ref: '#/components/schemas/Reporting_Currency_Code'
        #In AICPA and called Local_Currency_Code in ISO
        Amount_Local_Currency:
          $ref: '#/components/schemas/Local_Currency_Code'
        #In AICPA and called Ending_Functional_Amount in ISO
        Amount_Ending:
          $ref: '#/components/schemas/Ending_Functional_Amount'
        #In AICPA and called Ending_Reporting_Amount in ISO
        Amount_Ending_Reporting:
          $ref: '#/components/schemas/Ending_Reporting_Amount'
         #In AICPA and called Ending_Local_Amount in ISO
        Amount_Ending_Local:
          $ref: '#/components/schemas/Ending_Local_Amount'
        Budget_Flag:
          $ref: '#/components/schemas/Budget_Flag'

      required:
        - GL_Account_Number
        - Amount_Beginning
        - Amount_Ending
        - Amount_Currency
        - Balance_AsOf_Date
       
    
    Periods:
      type: array
      items:
          $ref: '#/components/schemas/Periods_Details'
      example: [
                {
                  "Period_Name": "Fiscal Year Ended 2019",
                  "Start_Date_Period": "2019-01-01",
                  "End_Date_Period": "2019-12-31",
                  "Period_Type": "Year",
                  "Entity_Identifier": 123456789
                },
                {
                  "Period_Name": "Fiscal Year Ended 2020",
                  "Start_Date_Period": "2020-01-01",
                  "End_Date_Period": "2020-12-31",
                  "Period_Type": "Year",
                  "Entity_Identifier": 123456789
                },
                {
                  "Period_Name": "Fiscal Quarter Ended Q1 2020",
                  "Start_Date_Period": "2020-01-01",
                  "End_Date_Period": "2020-03-31",
                  "Period_Type": "Quarter",
                  "Entity_Identifier": 123456789
                }
              ]
    
    Periods_Details:
      type: object
      properties:
        Period_Name:
          $ref: '#/components/schemas/Period_Name'
        Start_Date_Period:
          $ref: '#/components/schemas/Start_Date_Period'
        End_Date_Period:
          $ref: '#/components/schemas/End_Date_Period'
        Period_Type:
          $ref: '#/components/schemas/Period_Type'
        #Added for API Specification for cases where have multiple entities.
        Entity_Identifier:
          $ref: '#/components/schemas/Entity_Identifier'
      required:
        - Period_Name
        - Start_Date_Period
        - End_Date_Period
        - Period_Type

    Entities:
      type: array
      items:
          $ref: '#/components/schemas/Entity_Details'
    
    Entity_Details:
      type: object
      properties:
        Entity_Name:
          $ref: '#/components/schemas/Entity_Name'
        Entity_Identifier:
          $ref: '#/components/schemas/Entity_Identifier'
        GL_Subsidiaries:
          $ref: '#/components/schemas/GL_Subsidiaries'
      required:
        - Entity_Name
        - Entity_Identifier

    GL_Subsidiaries:
      type: array
      items:
          $ref: '#/components/schemas/Entity_Details'


        

    GL_Chart_of_Accounts:
      type: array
      items:
          $ref: '#/components/schemas/GL_Account_Details'
    GL_Account_Details:
      type: object
      properties:
        Entity_Identifier:
          $ref: '#/components/schemas/Entity_Identifier'
        GL_Account_Number:
          $ref: '#/components/schemas/GL_Account_Number'
        GL_Account_Name:
          $ref: '#/components/schemas/GL_Account_Name'
        FS_Caption:
          $ref: '#/components/schemas/FS_Caption'
        Account_Type:
          $ref: '#/components/schemas/Account_Type'
        Account_Subtype:
          $ref: '#/components/schemas/Account_Subtype'
        GL_Account_Description:
          $ref: '#/components/schemas/GL_Account_Description'
        
        Parent_GL_Account_Number:
          $ref: '#/components/schemas/Parent_GL_Account_Number'
        XBRL_Concept:
          $ref: '#/components/schemas/XBRL_Concept'
      required:
        - GL_Account_Number
        - GL_Account_Name

    AR_Open_Accounts_Receivables_Items:
      type: array
      items:
          $ref: '#/components/schemas/AR_Open_Accounts_Receivables'
    
    AR_Open_Accounts_Receivables: 
      type: object
      properties:
        Transaction_ID:
          $ref: '#/components/schemas/Transaction_ID'
        Invoice_ID:
          $ref: '#/components/schemas/Invoice_ID'
        Customer_Account_ID:
          $ref: '#/components/schemas/Customer_Account_ID'
        Fiscal_Year:
          $ref: '#/components/schemas/Fiscal_Year'
        Transaction_Date:
          $ref: '#/components/schemas/Transaction_Date'
        Transaction_Due_Date:
          $ref: '#/components/schemas/Transaction_Due_Date'
        Functional_Amount:
          $ref: '#/components/schemas/Functional_Amount'
        Functional_Currency_Code:  
          $ref: '#/components/schemas/Functional_Currency_Code'
        Transaction_Amount:
          $ref: '#/components/schemas/Transaction_Amount'
        Transaction_Currency_Code:
          $ref: '#/components/schemas/Transaction_Currency_Code'
        Functional_Balance:
          $ref: '#/components/schemas/Functional_Balance'
        Transaction_Balance:
          $ref: '#/components/schemas/Transaction_Balance'
        



 # This is where all the field properties are defined

    Balance_As_Of_Date:
      type: string  
      format: date
      description: The date through which the provided balance reflects account activity. EXAMPLE If a report was run for activity through 2014-12-31 on 2015-01-22, the date recorded would be 20141231. .
      example: "2018-12-31"

    Beginning_Functional_Amount:
      type: number
      format: float
      example: 100
      description: Beginning balance amount of the period (same amount as the ending  balance from the prior period after opening journal entries)  recorded in the functional or group  currency. No multi-currency  translation should be performed on  this amount because all are recorded  in a single currency.

    Beginning_Reporting_Amount:
      type: number
      format: float
      example: 100
      description: Beginning balance amount for the  period (same amount as the ending  balance from the prior period after opening journal entries) recorded in the currency used for  statutory reporting.

    Beginning_Local_Amount:
      type: number
      format: float
      example: 100
      description: Beginning balance amount for the  period in the local currency used for  multi-currency tracking.

    Ending_Functional_Amount:
      type: number
      format: float
      example: 100
      description: Ending balance amount for the period  recorded in the functional or group  currency. No multi-currency  translation should be performed on  this amount because all are recorded  in a single currency.

    Ending_Reporting_Amount:
      type: number
      format: float
      example: 100
      description: Ending balance amount for the period  in the currency used for statutory  reporting.

    Ending_Local_Amount:
      type: number
      format: float
      example: 100
      description: Ending balance amount for the period  in local currency used for multi-currency tracking.


    Budget_Flag:
      type: string
      enum: [budget, actual]
      example: actual
      description: Indicates if the trial balance amount is an actual amount or a budget amount. If this field is missing from the return result then the value is presumed to be actual.
      
    Journal_ID:
      type: string
      maxLength: 100
      description: The unique identifier for the journal entry. Typically auto-generated by the system.
      example: '1234abc'
      x-AICPA-Audit-Data-Std: 'Journal_ID'

    Journal_Number:
      type: string
      maxLength: 100
      description: The number of the journal entry; for example, including serial number,document type, and date.
      x-AICPA-Audit-Data-Std: 'none'
    
    GL_Account_Number:
      type: string
      maxLength: 100
      description: The GL account number defined in the chart of accounts. Matches AICPA Audit Data Standard element GL_Account_Number.
      example: 1234-567-890
      x-AICPA-Audit-Data-Std: 'GL_Account_Number'
    
    Fiscal_Year:
      type: string
      minLength: 4
      maxLength: 4
      description: |
        Fiscal year in which the Effective_Date occurs. The year shall be shown in four digits as “YYYY”, which is part of the extended format and the “YYYYMM-DD” in ISO 8601:2004. Matches AICPA Audit Data Standard element Fiscal_Year.
      example: 2019
      x-AICPA-Audit-Data-Std: 'Fiscal_Year'

    Period:
      type: string
      maxLength: 15
      description: Fiscal period in which the effective date occurs. This is the period defined by the company and is not a standardized format. Examples include W1–W53 for weekly periods, M1–M12 for monthly periods,  Q1–Q4 for quarterly periods and Year for Year. Matches AICPA Audit Data Standard element Period.
      example: Year
      x-AICPA-Audit-Data-Std: 'Period'

    Period_Name:
      type: string
      description: The name of the period as defined by the entity providing the reporting period.
      example: Fiscal Year Ended 2019

    Start_Date_Period:
      type: string
      format: date
      description: The date that the defined reporting period started as defined by the entity providing the reporting period.
      example: '2019-01-01'

    End_Date_Period:
      type: string
      format: date
      description: The date that the defined reporting period ended as defined by the entity providing the reporting period.
      example: '2019-12-31'
    

    Period_Type:
      type: string
      description: The type of period defined. For example Quarter, Year Half Year.
      enum: [Year, Quarter, HalfYear, 52Weeks, 3QCum, Month, 13Months, Other]
      example: 'Year'

    Entity_Name:
      type: string
      description: The name of the entity for which the GL information is applicable.
      example: ABC-CO

    Entity_Identifier:
      type: string
      description: The uid of the entity.
      example: 123456789

    Effective_Date:
      type: string
      format: date
      description: The date of the journal entry, no matter when the entry is received or created. This sometimes refers to the accounting date or accounting effective date; for example, if the user wants to see the financial results for the period ending March 5, 20X1, the journal entry may be created on any day during the open period and be assigned to the period ending March 5, 20X1. Matches AICPA Audit Data Standard element Effective_Date.
      example: "2018-12-31"
      x-AICPA-Audit-Data-Std: 'Effective_Date'

    Journal_ID_Line_Number:
      type: string
      maxLength: 100
      example: 1
      description: Identifier that is unique for each line within a journal entry. Matches AICPA Audit Data Standard element Journal_ID_Line_Number.
      x-AICPA-Audit-Data-Std: 'Journal_ID_Line_Number'

    JE_Type_Code:
      type: string
      maxLength: 60
      example:
      description: The code of journal entry type.
      x-AICPA-Audit-Data-Std: 'none'

    JE_Header_Description:
      type: string
      maxLength: 1000
      description: Description of the entire journal entry as described by the journal entry header. Matches AICPA Audit Data Standard element JE_Header_Description.
      example: "My first json Journal"
      x-AICPA-Audit-Data-Std: 'JE_Header_Description'

    JE_Line_Description:
      type: string
      maxLength: 1000
      example: Book to accrual account
      description: Description of the individual line within the journal entry. Matches AICPA Audit Data Standard element JE_Line_Description.
      x-AICPA-Audit-Data-Std: 'JE_Line_Description'

    Source:
      type: string
      maxLength: 25
      example: "Sales journal"
      description: Code for source from which the journal entry originated. EXAMPLE Sales journal, cash receipts journal, general journal, payroll journal, accountant manual entry, or spreadsheet. Matches AICPA Audit Data Standard element Source.
      x-AICPA-Audit-Data-Std: 'Source'

    Business_Unit_Code:
      type: string
      maxLength: 25
      example: "WidgetGroup"
      description: Used to identify the business unit, region, branch, and so on at the level that financial statements are being audited and for which the trial balance is generated. For example, you may use a code aligned with the concept of a reportable segment as defined in Financial Accounting Standards Board (FASB) Accounting Standards Codification (ASC) 280, Segment Reporting. Matches AICPA Audit Data Standard element Business_Unit_Code.
      x-AICPA-Audit-Data-Std: 'Business_Unit_Code'



    Functional_Amount:
      type: number
      example: 100
      description: Transaction monetary amount recorded in the functional or group currency. No multi-currency translation should be performed on this amount because all transactions are recorded in a single currency. Matches AICPA Audit Data Standard element Business_Unit_Code.
      x-AICPA-Audit-Data-Std: 'Amount'


    Reporting_Amount:
      type: number
      format: float
      example: 100
      description: Transaction monetary amount recorded in the reporting currency. Matches AICPA Audit Data Standard element Reporting_Amount.
      x-AICPA-Audit-Data-Std: 'Reporting_Amount'

    Reporting_Currency_Code:
      type: string
      maxLength: 3
      minLength: 3
      example: "USD"
      description: The code of currency used for nonconsolidated reporting as opposed to functional, consolidated reporting, local or actual amounts (ISO 4217:2015). Matches AICPA Audit Data Standard element Reporting_Amount_Currency.
      x-AICPA-Audit-Data-Std: 'Reporting_Amount_Currency'

    Local_Amount:
      type: number
      format: float
      example: 100
      description: Amount in the local country currency where the transaction originated. Matches AICPA Audit Data Standard element Local_Amount.
      x-AICPA-Audit-Data-Std: 'Local_Amount'

    Local_Currency_Code:
      type: string
      maxLength: 3
      minLength: 3
      example: "USD"
      description: The currency used for local country reporting requirements in ISO-4217 format. Matches AICPA Audit Data Standard element Local_Amount_Currency.
      x-AICPA-Audit-Data-Std: 'Local_Amount_Currency'
      
    
    Transaction_Amount:
      type: number
      format: float
      example: 100
      description: Amount in the transaction currency.
      x-AICPA-Audit-Data-Std: 'none'

    Credit_Debit_Indicator:
      type: string
      maxLength: 1
      example: "C"
      description: This indicates whether the amount is a credit or a debit. EXAMPLE C=credit; D=debit. Matches AICPA Audit Data Standard element Amount_Credit_Debit_Indicator.
      enum: [C,D]
      x-AICPA-Audit-Data-Std: 'Amount_Credit_Debit_Indicator'

    Reversal_Indicator:
      type: string
      maxLength: 1
      example: "1"
      description: Indicates whether this entry is a reversal or to be reversed. EXAMPLE 1 = entry is a reversal, 2 = entry is being reversed, and empty (“”) = none of the above or system generated indicators. Matches AICPA Audit Data Standard element Reversal_Indicator.
      x-AICPA-Audit-Data-Std: 'Reversal_Indicator'

    Reversal_Journal_ID:
      type: string
      maxLength: 100
      example: "sales"
      description: The code value or indicator of the settlement method used for cash receipt from customers (i.e. sales) and cash payment to suppliers (i.e. purchase); for example, check, wire transfer and cash. Matches AICPA Audit Data Standard element Reversal_Journal_ID.
      x-AICPA-Audit-Data-Std: 'Reversal_Journal_ID'
      
    Cancellation_Sign:
      type: boolean
      description: The sign of cancellation of a journal entry already formed but not yet posted. EXAMPLE 0=entry is not cancelled, 1=entry is cancelled.
      enum: [0,1]
      x-AICPA-Audit-Data-Std: 'none'
      
    Entered_By:
      type: string
      maxLength: 25
      description: The unique identifier for the person or process that created the record. Matches AICPA Audit Data Standard element Entered_By.
      example: "John Smith"
      x-AICPA-Audit-Data-Std: 'Entered_By'
    
    Created_Date:
      type: string
      format: date
      description: The date the journal entry was created in the system. This sometimes refers to the creation date. This should be a system-generated date (rather than user-created date), when possible. This date does not necessarily correspond with the date when the journal entry was posted to the GL or the period-end date. Matches AICPA Audit Data Standard element Entered_Date.
      example: "2019-01-01"
      x-AICPA-Audit-Data-Std: 'Entered_Date'
      
    Created_Time:
      type: string
      format: time
      description: The time the journal entry was created in the system. Matches AICPA Audit Data Standard element Entered_Time.
      example: '2018-12-31'
      x-AICPA-Audit-Data-Std: 'Entered_Time'

    Last_Modified_By:
      type: string
      maxLength: 25
      description: User_ID (from User_Listing file) for the last person modifying this entry. Matches AICPA Audit Data Standard element Last_Modified_By.
      example: "Sam Smith"
      x-AICPA-Audit-Data-Std: 'Last_Modified_By'
    
    Last_Modified_Date:
      type: string
      format: date
      description: The date the entry was last modified before posting. Matches AICPA Audit Data Standard element Last_Modified_Date.
      example: "2019-01-01"
      x-AICPA-Audit-Data-Std: 'Last_Modified_Date'
    
    Approved_Person_ID:
      type: string
      maxLength: 25
      description: The unique identifier for the person who approved the entry. Typically auto-generated by the system.  Matches AICPA Audit Data Standard element Approved_By.
      example: "123456"
      x-AICPA-Audit-Data-Std: 'Approved_By'
      
    Approved_Date:
      type: string
      format: date
      description: The date the entry was approved. Matches AICPA Audit Data Standard element Approved_Date.
      example: '2018-12-31'
      x-AICPA-Audit-Data-Std: 'Approved_Date'
      

    Transaction_Currency_Code:
      type: string 
      maxLength: 3
      minLength: 3
      description: The currency used in actual transaction (ISO 4217:2015).
      example:

    Functional_Currency_Code:
      type: string
      maxLength: 3
      minLength: 3
      example: "USD"
      description: The code of functional or group currency related to the amount (ISO 4217:2015). Matches AICPA Audit Data Standard element Amount_Currency.
      x-AICPA-Audit-Data-Std: 'Amount_Currency'

    GL_Account_Name:
      type: string
      maxLength: 100
      description: The name of the GL account.
      example:

    FS_Caption:
      type: string
      maxLength: 100
      description: The financial statement caption represents a related group of accounts. EXAMPLE Cash and cash equivalents, accounts payable and cost of sales. The caption can be at the trial balance level.
      example:

    Account_Type:
      type: string
      maxLength: 25
      description: The type of account. EXAMPLE Assets, Liabilities, Equity, Revenue and Expense. 
      example: Asset

    Account_Subtype:
      type: string
      maxLength: 25
      description: The subtype of the account. EXAMPLE Current assets are the subtype of assets.
      example:

    GL_Account_Description:
      type: string
      maxLength: 256
      description: Label or description associated with GL_Account_Number.
      example: Finished goods inventory held by the company.

    Parent_GL_Account_Number:
      type: string
      maxLength: 100
      description: A reference to the GL_Account_Number that is the parent in an account hierarchy. Provided to allow more than the predefined levels of hierarchy in the chart of accounts table.
      example:

    XBRL_Concept:
      type: string
      description: XBRL concept associated with the account with the namespace in clark notation.
      example: '{http://fasb.org/us-gaap/2020-01-31}InventoryFinishedGoods'


    Transaction_ID:
      type: string
      maxLength: 60
      description: The unique identifier for the transaction of an open AR includes invoice and cash received. Typically auto-generated by the system.
      example: 1234567890

    Invoice_ID:
      type: string
      maxLength: 60
      description: The unique identifier for the invoice, from which AR is derived. Typically auto-generated by the system. May be set to NULL if adjustment is at customer (not invoice) level. Otherwise shall match the Invoice_ID in the SAL_Invoices_Generated table.
      example: 1234567890

    Customer_Account_ID:
      type: string
      maxLength: 100
      description: The unique identifier for the customer payment is expected or to whom unused credits have been applied. Typically auto-generated by the system. Shall match the Customer_Account_ID in the BAS_Customer table.
      example: 123456

    Transaction_Date:
      type: string
      format: date
      maxLength: 10
      minLength: 10
      description: The date of the transaction, regardles of the date the transaction is created. This is the date from which the due date is calculated based on the invoice terms.
      example: '2018-12-31'

    Transaction_Due_Date:
      type: string
      format: date
      maxLength: 10
      minLength: 10
      description: The date payment is due from the customer. Not all transactions will have a due date. May be set to NULL, if there is no due date. EXAMPLE Credit memos. Aging of a receivable is usually calculated based on this date.
      example: '2018-12-31'

    Functional_Balance:
      type: number
      description: Balance monetary amount recorded in the functional or group currency. The balance here refers to the remaining balance unreceived or needing settlement, which can be calculated by analyzing net of the originating invoice and any cash received and adjustments against it. No multicurrency translation should be performed on this amount because all transactions are recorded in a single currency.
      example:

    Transaction_Balance:
      type: number
      description: Balance monetary amount recorded in the transaction currency. The balance here refers to the remaining balance unreceived or needing settlement, which can be calculated by analyzing net of the originating invoice and any cash received and adjustments against it.
      example: '253.23'



  responses:
    bad_request:
      description: >
        Malformed request or missing fields. Check that Content-Type matches the format/encoding, and that all required fields are spelled correctly, have correct types, and valid values. 
      content:
        applications/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example:
            error: bad_request
            error_description: Parameter field invalid.
    bad_token:
      description: The token is invalid, expired, or corrupted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example:
            error: unauthorized,
            error_description: Cannot convert access token to JSON
    unauthorized:
      description: >
        Bad credentials, or could not read credentials due to malformed JSON.
         * "Full authentication is required..." -> malformed JSON
         * "Bad client credentials" -> client_id/client_secret pair invalid
         * "Bad credentials" -> username/password pair invalid
      content:
        applications/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example:
            error: unauthorized
            error_description: Full authentication is required to access this resource
    not_found:
      description: This resource doesn't exist or you don't have the permissions to view it.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example: 
            error: not_found
            error_description: An entity with that name could not be found.
    method_not_allowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example: 
            error: method_not_allowed
            error_description: Request method 'DELETE' not supported
    internal_server_error:
      description: Internal error, not the fault of the client.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_result'
          example: 
            error: internal_error
            error_description: Unknown error, try again later


   


