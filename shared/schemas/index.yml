#------LICENSE--------
#MIT License
#
#Copyright (c) 2020 AICPA

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ErrorResult:
  type: object
  properties:
    code:
      type: string
      description: Implementation-defined Identifier/Code for the error being returned by the server
    errorDescription:
      type: string
      description: Provides additional human-readable description of the error. Implementation should include diagnostic detail to help the calling client to take corrective actiont to eliminate the error, if possible.
GLJournals:
  type: array
  items:
      $ref: '#/GLDetails'
GLDetails: 
  type: object
  properties:
    #In AICPA and ISO
    journalId:
      $ref: './fields.yml#/JournalID'
    #ISO ONLY
    #JournalNumber:
    # $ref: './fields.yml#/JournalNumber'
    #In AICPA and ISO
    fiscalYear:
      $ref: './fields.yml#/FiscalYear'
    #In AICPA and called AccountingPeriod in ISO
    period:
      $ref: './fields.yml#/Period'
    #In AICPA and ISO
    effectiveDate:
      $ref: './fields.yml#/EffectiveDate'
    #ISO ONLY
    #JETypeCode:
    # $ref: './fields.yml#/JETypeCode'
    #In AICPA and ISO
    jeHeaderDescription:
      $ref: './fields.yml#/JEHeaderDescription'
    #In AICPA and ISO
    source:
      $ref: './fields.yml#/Source'
    #In AICPA and ISO
    businessUnitCode:
      $ref: './fields.yml#/BusinessUnitCode'
    #In AICPA and ISO
    reversalIndicator:
      $ref: './fields.yml#/ReversalIndicator'
    #In AICPA and ISO
    reversalJournalId:
      $ref: './fields.yml#/ReversalJournalID'
    #ISO ONLY 
    cancellationSign:
      $ref: './fields.yml#/CancellationSign'
    # May be this should be changed to Created By not all journals are created by a human which entered implies.
    # The ISO standard changed it to CreatedUserId. 
    enteredBy:
      $ref: './fields.yml#/EnteredBy'
    #In AICPA and called CreatedDate in ISO
    enteredDate:
      $ref: './fields.yml#/CreatedDate'
    #In AICPA and called CreatedTime in ISO
    enteredTime:
      $ref: './fields.yml#/CreatedTime'
    #AICPA ONLY
    lastModifiedBy:
      $ref: './fields.yml#/LastModifiedBy'
    #AICPA ONLY
    lastModifiedDate:
      $ref: './fields.yml#/LastModifiedDate'
    #In AICPA and called ApprovedPersonID in ISO
    approvedBy:
      $ref: './fields.yml#/ApprovedPersonID'
    #In AICPA and ISO
    approvedDate:
      $ref: './fields.yml#/ApprovedDate'
    #Added for API Specification for cases where have multiple entities.
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
    glLineItems:
      type: array
      items:
        $ref: '#/GLLineItem'
  required:
    - journalId
    - effectiveDate
    - glLineItems

  
GLLineItem:
  type: object
  properties:
    #In AICPA and ISO
    glAccountNumber:
      $ref: './fields.yml#/GLAccountNumber'
    #In AICPA and ISO
    journalIDLineNumber:
      $ref: './fields.yml#/JournalIDLineNumber'
    #In AICPA and ISO
    jeLineDescription:
      $ref: './fields.yml#/JELineDescription'
    #Amount in AICPA FunctionalAmount in ISO
    amount:
      $ref: './fields.yml#/FunctionalAmount'
    #AmountCurrency in AICPA FunctionalAmount in ISO
    amountCurrency:
      $ref: './fields.yml#/FunctionalCurrencyCode'
    #In AICPA and ISO
    reportingAmount:
      $ref: './fields.yml#/ReportingAmount'
    #In AICPA and ISO as ReportingCurrencyCode
    reportingAmountCurrency:
      $ref: './fields.yml#/ReportingCurrencyCode'
    #In AICPA and ISO
    localAmount:
      $ref: './fields.yml#/LocalAmount' 
    #In AICPA and ISO as LocalCurrencyCode
    localAmountCurrency:
      $ref: './fields.yml#/LocalCurrencyCode'
    #ISO ONLY
    transactionAmount:
      $ref: './fields.yml#/TransactionAmount'
    #ISO ONLY
    transactionCurrency:
      $ref: './fields.yml#/TransactionCurrencyCode'
    #AmountCreditDebitIndicator in AICPA CreditDebitIndicator in ISO
    amountCreditDebitIndicator:
      $ref: './fields.yml#/CreditDebitIndicator'
  required:
    - glAccountNumber
    - amount
    - amountCreditDebitIndicator
    - amountCurrency

XbrlTbResponse:
  type: object
  properties:
    documentInfo:
      $ref: '#/DocumentInfoOimJson'
    facts:
        $ref: '#/FactsOimJson'

DocumentInfoOimJson:
  type: object
  properties:
    documentType:
      type: string
      example: http://www.xbrl.org/WGWD/YYYY-MM-DD/xbrl-json
    features:
      type: object
      properties:
        xbrl:canonicalValues: 
          type: boolean
    prefixes:
      type: object
      additionalProperties:
        type: string
      example:
        xbrl: "http://www.xbrl.org/WGWD/YYYY-MM-DD/oim"
        p1: "http://www.xbrl.org/2003/iso4217"
        p2: "http://aicpa.org/das/us-gaap/2020-01-31"
        p3: "http://www.xbrl.org/2003/instance"
  
        
    taxonomy:
      type: array
      items:
        type: string
        example: 
          "http://www.aicpa.org/das/us-gaap/2020-01-31.xsd"

FactsOimJson:
  type: object
  properties:
    value:
      type: string
    accuracy:
      type: integer
    aspects:
      type: object
      properties:
        concept: 
          type: string
        entity:
          type: string
        period:
          type: string
        unit:
          type: string
        glAccountNumber:
          $ref: './fields.yml#/GLAccountNumber'
  example:
    xfd233befbacbc83e43d510ae01866384c65f23a60482caaa20331642: {
    "value": "151000",
    "accuracy": -3,
    "aspects": {
      "concept": "p2:ContractWithCustomers",
      "entity": "p3:0001512228",
      "period": "2015-07-01T00:00:00/2016-07-01T00:00:00",
      "unit": "p1:USD",
      "glAccountNumber": "12345678"}
    }

GLAccountBalances:
  type: array
  items:
      $ref: '#/GLAccountBalance'
GLAccountBalance: 
  type: object
  properties:
    glAccountNumber:
      $ref: './fields.yml#/GLAccountNumber'
    #Added for API Specification for cases where have multiple entities.
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
    businessUnitCode:
      $ref: './fields.yml#/BusinessUnitCode'
    balanceAsOfDate:
      $ref: './fields.yml#/BalanceAsOfDate'
    fiscalYear:
      $ref: './fields.yml#/FiscalYear'
    period:
      $ref: './fields.yml#/Period'
    #In AICPA and called BeginningFunctionalAmount in ISO
    amountBeginning:
      $ref: './fields.yml#/BeginningFunctionalAmount'
    #In AICPA and called BeginningReportingAmount in ISO
    amountBeginningReporting:
      $ref: './fields.yml#/BeginningReportingAmount'
    #In AICPA and called BeginningLocalAmount in ISO
    amountBeginningLocal:
      $ref: './fields.yml#/BeginningLocalAmount'
    #In AICPA and called FunctionalCurrencyCode in ISO
    amountCurrency:
      $ref: './fields.yml#/FunctionalCurrencyCode'
    #In AICPA and called ReportingCurrencyCode in ISO
    amountReportingCurrency:
      $ref: './fields.yml#/ReportingCurrencyCode'
    #In AICPA and called LocalCurrencyCode in ISO
    amountLocalCurrency:
      $ref: './fields.yml#/LocalCurrencyCode'
    #In AICPA and called EndingFunctionalAmount in ISO
    amountEnding:
      $ref: './fields.yml#/EndingFunctionalAmount'
    #In AICPA and called EndingReportingAmount in ISO
    amountEndingReporting:
      $ref: './fields.yml#/EndingReportingAmount'
      #In AICPA and called EndingLocalAmount in ISO
    amountEndingLocal:
      $ref: './fields.yml#/EndingLocalAmount'
    budgetFlag:
      $ref: './fields.yml#/BudgetFlag'

  required:
    - glAccountNumber
    - amountBeginning
    - amountEnding
    - amountCurrency
    - balanceAsOfDate
    

Periods:
  type: array
  items:
      $ref: '#/PeriodsDetails'
  example: [
            {
              "periodName": "Fiscal Year Ended 2019",
              "startDatePeriod": "2019-01-01",
              "endDatePeriod": "2019-12-31",
              "periodType": "Year",
              "entityIdentifier": 123456789
            },
            {
              "periodName": "Fiscal Year Ended 2020",
              "startDatePeriod": "2020-01-01",
              "endDatePeriod": "2020-12-31",
              "periodType": "Year",
              "entityIdentifier": 123456789
            },
            {
              "periodName": "Fiscal Quarter Ended Q1 2020",
              "startDatePeriod": "2020-01-01",
              "endDatePeriod": "2020-03-31",
              "periodType": "Quarter",
              "entityIdentifier": 123456789
            }
          ]

PeriodsDetails:
  type: object
  properties:
    periodName:
      $ref: './fields.yml#/PeriodName'
    startDatePeriod:
      $ref: './fields.yml#/StartDatePeriod'
    endDatePeriod:
      $ref: './fields.yml#/EndDatePeriod'
    periodType:
      $ref: './fields.yml#/PeriodType'
    #Added for API Specification for cases where have multiple entities.
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
  required:
    - periodName
    - startDatePeriod
    - endDatePeriod
    - periodType

Entities:
  type: array
  items:
      $ref: '#/EntityDetails'

EntityDetails:
  type: object
  properties:
    entityName:
      $ref: './fields.yml#/EntityName'
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
    glSubsidiaries:
      $ref: '#/GLSubsidiaries'
  required:
    - entityName
    - entityIdentifier

GLSubsidiaries:
  type: array
  items:
      $ref: '#/EntityDetails'

GLChartOfAccounts:
  type: array
  items:
      $ref: '#/GLAccountDetails'

GLAccountDetails:
  type: object
  properties:
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
    glAccountNumber:
      $ref: './fields.yml#/GLAccountNumber'
    glAccountName:
      $ref: './fields.yml#/GLAccountName'
    fsCaption:
      $ref: './fields.yml#/FSCaption'
    accountType:
      $ref: './fields.yml#/AccountType'
    accountSubtype:
      $ref: './fields.yml#/AccountSubtype'
    glAccountDescription:
      $ref: './fields.yml#/GLAccountDescription'        
    parentGLAccountNumber:
      $ref: './fields.yml#/ParentGLAccountNumber'
    xbrlConcept:
      $ref: './fields.yml#/XBRLConcept'
  required:
    - glAccountNumber
    - glAccountName

AROpenAccountsReceivablesItems:
  type: array
  items:
      $ref: '#/AROpenAccountsReceivables'

AROpenAccountsReceivables: 
  type: object
  properties:
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    transactionId:
      $ref: './fields.yml#/TransactionID'
    invoiceId:
      $ref: './fields.yml#/InvoiceID'
    transactionType:
      $ref: './fields.yml#/TransactionType'
    transactionDate:
      $ref: './fields.yml#/TransactionDate'
    transactionDueDate:
      $ref: './fields.yml#/TransactionDueDate'
    balanceAmount:
      $ref: './fields.yml#/FunctionalBalance'
    balanceAmountCurrency:  
      $ref: './fields.yml#/FunctionalCurrencyCode'
    balanceAmountReporting:
      $ref: './fields.yml#/ReportingBalance'
    balanceReportingCurrency:
      $ref: './fields.yml#/ReportingCurrencyCode'
    balanceAmountLocal:
      $ref: './fields.yml#/LocalBalance'
    balanceLocalCurrency:
      $ref: './fields.yml#/LocalCurrencyCode'
    originalBalanceAmount:
      $ref: './fields.yml#/FunctionalAmount'
    originalBalanceAmountLocal:
      $ref: './fields.yml#/LocalAmount'
    originalBalanceAmountReporting:
      $ref: './fields.yml#/ReportingAmount'
    amountCreditDebitIndicator:
      $ref: './fields.yml#/CreditDebitIndicator'

Customers:
  type: array
  items:
      $ref: '#/Customer'

Customer:
  type: object
  properties:
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    customerAccountName:
      $ref: './fields.yml#/CustomerAccountName'
    customerTIN:
      $ref: './fields.yml#/CustomerTIN'
    customerPhysicalStreetAddress1:
      $ref: './fields.yml#/CustomerStreetAddress1'
    customerPhysicalStreetAddress2:
      $ref: './fields.yml#/CustomerStreetAddress2'
    customerPhysicalCity:
      $ref: './fields.yml#/CustomerCity'
    customerPhysicalZipPostalCode: 
      $ref: './fields.yml#/CustomerPhysicalPostalCode'
    customerPhysicalCountry:
      $ref: './fields.yml#/CustomerCountry'
    customerBillingAddress1:
      $ref: './fields.yml#/CustomerBillingAddress1'
    customerBillingAddress2:
      $ref: './fields.yml#/CustomerBillingAddress2'
    customerBillingCity:
      $ref: './fields.yml#/CustomerBillingCity'
    customerBillingZipPostalCode:
      $ref: './fields.yml#/CustomerBillingPostalCode'
    customerBillingCountry:
      $ref: './fields.yml#/CustomerBillingCountry'
    customerEmail:
      $ref: './fields.yml#/CustomerEmail'
    customerDomainAddress:
      $ref: './fields.yml#/CustomerDomainAddress'
    customerActiveStatus:
      $ref: './fields.yml#/CustomerActiveStatus'
    transactionCreditLimit:
      $ref: './fields.yml#/TransactionCreditLimit'
    customerCreditLimit:
      $ref: './fields.yml#/CustomerCreditLimit'
    customerTermsDueDays:
      $ref: './fields.yml#/CustomerTermsDueDays'
    customerEnteredBy:
      $ref: './fields.yml#/EnteredBy'


Invoices:
  type: array
  items:
      $ref: '#/Invoice'

Invoice:
  type: object
  properties:
    invoiceId:
      $ref: './fields.yml#/InvoiceID'
    invoiceNumber:
      $ref: './fields.yml#/InvoiceNumber'
    invoiceDate:
      $ref: './fields.yml#/InvoiceDate'
    invoiceFiscalYear:
      $ref: './fields.yml#/FiscalYear'
    invoicePeriod: 
      $ref: './fields.yml#/Period'
    invoiceTypeName:
      $ref: './fields.yml#/InvoiceTypeName'
    invoiceDueDate:
      $ref: './fields.yml#/InvoiceDueDate'
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    settlementMethodCode:
      $ref: './fields.yml#/SettlementMethodCode'
    invoiceAmount:
      $ref: './fields.yml#/InvoiceTransactionAmount'
    invoiceAmountCurrency:
      $ref: './fields.yml#/InvoiceTransactionCURCode'
    paymentTermCode:
      $ref: './fields.yml#/PaymentTermCode'
    enteredBy:
      $ref: './fields.yml#/EnteredBy'
    tax1TypeCode:
      $ref: './fields.yml#/Tax1TypeCode'
    tax1TransactionAmount:
      $ref: './fields.yml#/Tax1TransactionAmount'