#------LICENSE--------
#MIT License
#
#Copyright (c) 2020 AICPA

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ErrorResult:
  type: object
  properties:
    code:
      type: string
      description: Implementation-defined Identifier/Code for the error being returned by the server
    errorDescription:
      type: string
      description: Provides additional human-readable description of the error. Implementation should include diagnostic detail to help the calling client to take corrective actiont to eliminate the error, if possible.

Periods:
  type: array
  items:
      $ref: '#/PeriodsDetails'
  example: [
            {
              "periodName": "Fiscal Year Ended 2019",
              "startDatePeriod": "2019-01-01",
              "endDatePeriod": "2019-12-31",
              "periodType": "Year",
              "entityIdentifier": 123456789
            },
            {
              "periodName": "Fiscal Year Ended 2020",
              "startDatePeriod": "2020-01-01",
              "endDatePeriod": "2020-12-31",
              "periodType": "Year",
              "entityIdentifier": 123456789
            },
            {
              "periodName": "Fiscal Quarter Ended Q1 2020",
              "startDatePeriod": "2020-01-01",
              "endDatePeriod": "2020-03-31",
              "periodType": "Quarter",
              "entityIdentifier": 123456789
            }
          ]

PeriodsDetails:
  type: object
  properties:
    periodName:
      $ref: './fields.yml#/PeriodName'
    startDatePeriod:
      $ref: './fields.yml#/StartDatePeriod'
    endDatePeriod:
      $ref: './fields.yml#/EndDatePeriod'
    periodType:
      $ref: './fields.yml#/PeriodType'
    #Added for API Specification for cases where have multiple entities.
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
  required:
    - periodName
    - startDatePeriod
    - endDatePeriod
    - periodType

Entities:
  type: array
  items:
      $ref: '#/EntityDetails'

EntityDetails:
  type: object
  properties:
    entityName:
      $ref: './fields.yml#/EntityName'
    entityIdentifier:
      $ref: './fields.yml#/EntityIdentifier'
    glSubsidiaries:
      $ref: '#/Subsidiaries'
  required:
    - entityName
    - entityIdentifier

Subsidiaries:
  type: array
  items:
      $ref: '#/EntityDetails'

AROpenAccountsReceivablesItems:
  type: array
  items:
      $ref: '#/AROpenAccountsReceivables'

AROpenAccountsReceivables: 
  type: object
  properties:
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    transactionId:
      $ref: './fields.yml#/TransactionID'
    invoiceId:
      $ref: './fields.yml#/InvoiceID'
    transactionType:
      $ref: './fields.yml#/TransactionType'
    transactionDate:
      $ref: './fields.yml#/TransactionDate'
    transactionDueDate:
      $ref: './fields.yml#/TransactionDueDate'
    balanceAmount:
      $ref: './fields.yml#/FunctionalBalance'
    balanceAmountCurrency:  
      $ref: './fields.yml#/FunctionalCurrencyCode'
    balanceAmountReporting:
      $ref: './fields.yml#/ReportingBalance'
    balanceReportingCurrency:
      $ref: './fields.yml#/ReportingCurrencyCode'
    balanceAmountLocal:
      $ref: './fields.yml#/LocalBalance'
    balanceLocalCurrency:
      $ref: './fields.yml#/LocalCurrencyCode'
    originalBalanceAmount:
      $ref: './fields.yml#/FunctionalAmount'
    originalBalanceAmountLocal:
      $ref: './fields.yml#/LocalAmount'
    originalBalanceAmountReporting:
      $ref: './fields.yml#/ReportingAmount'
    amountCreditDebitIndicator:
      $ref: './fields.yml#/CreditDebitIndicator'

Customers:
  type: array
  items:
      $ref: '#/Customer'

Customer:
  type: object
  properties:
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    customerAccountName:
      $ref: './fields.yml#/CustomerAccountName'
    customerTIN:
      $ref: './fields.yml#/CustomerTIN'
    customerPhysicalStreetAddress1:
      $ref: './fields.yml#/CustomerStreetAddress1'
    customerPhysicalStreetAddress2:
      $ref: './fields.yml#/CustomerStreetAddress2'
    customerPhysicalCity:
      $ref: './fields.yml#/CustomerCity'
    customerPhysicalZipPostalCode: 
      $ref: './fields.yml#/CustomerPhysicalPostalCode'
    customerPhysicalCountry:
      $ref: './fields.yml#/CustomerCountry'
    customerBillingAddress1:
      $ref: './fields.yml#/CustomerBillingAddress1'
    customerBillingAddress2:
      $ref: './fields.yml#/CustomerBillingAddress2'
    customerBillingCity:
      $ref: './fields.yml#/CustomerBillingCity'
    customerBillingZipPostalCode:
      $ref: './fields.yml#/CustomerBillingPostalCode'
    customerBillingCountry:
      $ref: './fields.yml#/CustomerBillingCountry'
    customerEmail:
      $ref: './fields.yml#/CustomerEmail'
    customerDomainAddress:
      $ref: './fields.yml#/CustomerDomainAddress'
    customerActiveStatus:
      $ref: './fields.yml#/CustomerActiveStatus'
    transactionCreditLimit:
      $ref: './fields.yml#/TransactionCreditLimit'
    customerCreditLimit:
      $ref: './fields.yml#/CustomerCreditLimit'
    customerTermsDueDays:
      $ref: './fields.yml#/CustomerTermsDueDays'
    customerEnteredBy:
      $ref: './fields.yml#/EnteredBy'


Invoices:
  type: array
  items:
      $ref: '#/Invoice'

Invoice:
  type: object
  properties:
    invoiceId:
      $ref: './fields.yml#/InvoiceID'
    invoiceNumber:
      $ref: './fields.yml#/InvoiceNumber'
    invoiceDate:
      $ref: './fields.yml#/InvoiceDate'
    invoiceFiscalYear:
      $ref: './fields.yml#/FiscalYear'
    invoicePeriod: 
      $ref: './fields.yml#/Period'
    invoiceTypeName:
      $ref: './fields.yml#/InvoiceTypeName'
    invoiceDueDate:
      $ref: './fields.yml#/InvoiceDueDate'
    customerAccountId:
      $ref: './fields.yml#/CustomerAccountID'
    settlementMethodCode:
      $ref: './fields.yml#/SettlementMethodCode'
    invoiceAmount:
      $ref: './fields.yml#/InvoiceTransactionAmount'
    invoiceAmountCurrency:
      $ref: './fields.yml#/InvoiceTransactionCURCode'
    paymentTermCode:
      $ref: './fields.yml#/PaymentTermCode'
    enteredBy:
      $ref: './fields.yml#/EnteredBy'
    tax1TypeCode:
      $ref: './fields.yml#/Tax1TypeCode'
    tax1TransactionAmount:
      $ref: './fields.yml#/Tax1TransactionAmount'